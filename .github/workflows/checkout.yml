name: CI/CD Docker3

on:
  push:
    branches: [ master ]

env:
  VERSION: ${{ github.sha }}
  IMAGE_NAME: booksan_board_booksan_board

jobs:
  build-docker-image:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
        
      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: clean bootJar
      
      - name: docker image build
        run: docker build -t ${{ secrets.USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }} .
      
      - name: docker login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
      
      - name: docker Hub push
        run: docker push ${{ secrets.USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}

  deploy:
    needs: build-docker-image
    name: Deploy
    runs-on: [ self-hosted, label-go2 ]
    steps:
      - name: docker login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.PASSWORD }}
      
      - name: Docker run
        run: |
          sudo docker stop ${{ env.IMAGE_NAME }}_1 || true
          sudo docker rm ${{ env.IMAGE_NAME }}_1 || true
          sudo docker run -d \
            --network network \
            --name ${{ env.IMAGE_NAME }}_1 \
            --restart on-failure \
            -v /home/ubuntu/Downloads:/home/ubuntu/Downloads \
            -e PORT=8080 \
            ${{ secrets.USERNAME }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          sudo docker image prune -af
