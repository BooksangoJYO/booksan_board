<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC  "-//mybatis.org//DTO Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.booksan.booksan_board.dao.BoardDAO">
	<sql id="search">
		<where>
			<!-- 항상 적용되는 조건(삭제여부='N') -->
			disabled ='N'			
			<if test="keyword != null and keyword != ''">
				AND
 				<choose>
					<!-- 통합검색 -->
					<when test="searchType == null or searchType == ''">
						concat_ws(' ', d.title, d.content, d.email, b.isbn, b.book_title, b.book_writer, b.book_publisher) like concat('%', #{keyword}, '%')
					</when>
					<!-- 도서로 검색 -->					
					<when test="searchType == 'book'">
						concat_ws(' ', b.isbn, b.book_title, b.book_writer, b.book_publisher) like concat('%', #{keyword}, '%')
					</when>
				</choose>
			</if>
		</where>
	</sql>


	<!-- 게시물 등록 -->
	<insert id="insertBoard" useGeneratedKeys="true" keyProperty="dealId">
		insert into DEALS_BOARD (title, content, books_category_id, isbn, price,email)
		values (#{title},#{content},#{booksCategoryId},#{isbn},#{price},#{email})
	</insert>
	
	<!-- 게시물 단건조회 -->
	<select id="readBoardById">
		select * from DEALS_BOARD where deal_id=#{dealId} and disabled='N'
	</select>

	<!-- 게시물 목록 -->
	<select id="getBoardList">
		select * from DEALS_BOARD d join BOOKS_INFO b on d.isbn = b.isbn
		<include refid="search" />
		order by insert_datetime DESC 
		limit #{skip}, #{size}
	</select>
	
	<!-- 게시물 수정 -->
	<update id="updateBoard" parameterType="io.booksan.booksan_board.vo.BoardVO">
		update DEALS_BOARD
		set title=#{title},
			content=#{content},
			books_category_id=#{booksCategoryId},
			isbn=#{isbn},
			price=#{price},		
			updated_datetime=now(),
			status=#{status}
		where deal_id=#{dealId}			
	</update>
	
	<!-- 게시물 삭제(상태변경) -->
	<update id="deleteBoard">
		update DEALS_BOARD
		set disabled='Y'
		where deal_id=#{dealId}
	</update>
	
	<!-- 게시물 목록 개수(페이지네이션) -->
	<select id="getTotalCount">
		select count(*)		 
		from DEALS_BOARD d join BOOKS_INFO b on d.isbn = b.isbn
		<include refid="search" />
	</select>
	
	<!-- 가판대 수정 판매여부 상태 변경 -->
	<update id="updateStatus">
		update DEALS_BOARD
		set status=#{status}
		where deal_id=#{dealId}	
	</update>

	<insert id="insertFavorite">
		INSERT INTO FAVORITES_DEALS 
			(email, deal_id, disabled)
		VALUES 
			(#{email}, #{dealId}, 'N')
		ON DUPLICATE KEY UPDATE
			disabled = IF(disabled = 'N', 'Y', 'N'),
			favorite_datetime = NOW()
	</insert>

	<select id="getFavoriteList">
		SELECT  d.*
		FROM DEALS_BOARD d
		JOIN FAVORITES_DEALS fd  ON d.deal_id = fd.deal_id
		WHERE fd.email = #{email}
		AND fd.disabled = 'N'
		ORDER BY fd.favorite_datetime DESC
		limit #{skip}, #{size}
	</select>

	<select id="getFavoriteCount">
		select count(*)
		FROM DEALS_BOARD d
		JOIN FAVORITES_DEALS fd  ON d.deal_id = fd.deal_id
		WHERE fd.email = #{email}
		AND fd.disabled = 'N'
	</select>


	<update id="updateBookAlert">
        UPDATE USERS
        <choose>
            <when test="action == 'increase'">
                SET book_alert = book_alert + 1
            </when>
            <when test="action == 'decrease'">
                SET book_alert = book_alert - #{bookAlert}
            </when>
        </choose>
        WHERE email = #{email}
    </update>

	<insert id="insertBoardReservation">
        INSERT INTO BOARD_RESERVATION	(email , deal_id)
        VALUES (#{email},#{dealId})
    </insert>

    <update id="updateBoardReservation">
        UPDATE BOARD_RESERVATION
        SET read_time = NOW()
        WHERE email = #{email}
        AND read_time IS NULL
    </update>

	<select id="getBoardReservationList">
		SELECT
			d.deal_id,
			d.title,
			bi.book_title,
			bi.book_image_url,
			br.write_time
		FROM 
			DEALS_BOARD d
			INNER JOIN BOARD_RESERVATION br ON br.deal_id = d.deal_id 
			INNER JOIN BOOKS_INFO bi ON d.isbn = bi.isbn
		WHERE 
			br.email = #{email}
			AND br.read_time IS NULL
			AND d.DISABLED = 'N'
		ORDER BY 
			br.write_time DESC
	</select>

	<select id="getReservationPeople">
		SELECT email FROM FAVORITES_BOOKS
		where isbn = #{isbn}
		AND DISABLED = 'N'
	</select>
	
</mapper>